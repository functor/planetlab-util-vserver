#! /bin/bash
# $Id: vrpm,v 1.13 2005/01/27 21:24:44 ensc Exp $

# Copyright (C) 2003 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
#  
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#  
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

: ${UTIL_VSERVER_VARS:=/usr/lib/util-vserver/util-vserver-vars}
test -e "$UTIL_VSERVER_VARS" || {
    echo $"Can not find util-vserver installation (the file '$UTIL_VSERVER_VARS' would be expected); aborting..." >&2
    exit 1
}
. "$UTIL_VSERVER_VARS"
. "$_LIB_FUNCTIONS"

function showHelp()
{
    echo \
$"Usage: $0 <vserver-name>* [--all] [--quiet|-q] [--help] [--version] [--unify] -- <rpm-params>+

Report bugs to <$PACKAGE_BUGREPORT>."

    exit $1
}

function showVersion()
{
    echo \
$"vrpm $PACKAGE_VERSION -- rpm for vservers
This program is part of $PACKAGE_STRING

Copyright (C) 2003 Enrico Scholz
This program is free software; you may redistribute it under the terms of
the GNU General Public License.  This program has absolutely no warranty."
    
    exit $1
}

do_unify=
is_quiet=
declare -a vservers=()

while test "$#" -ge 1; do
    case "$1" in
	--quiet|-q)
	    is_quiet=1
	    ;;
	--all)
	    getAllVservers tmp
	    vservers=( "${vservers[@]}" "${tmp[@]}" )
	    ;;
	--unify)
	    do_unify=1
	    ;;
	--)
	    shift; break;;
	--help)
	    showHelp 0;;
	--version)
	    showVersion 0;;
	*)  vservers=( "${vservers[@]}" "$1" )
     esac
     shift
done

test "$#" -ge 1 || showHelp 1 >&2
test "${#vservers[@]}" -ne 1 || is_quiet=1

cnt=0
res=255

for i in "${vservers[@]}"; do
    cnt=$[ cnt + 1 ]

    test -n "$is_quiet" || {
	colorize bold echo -n "vrpm: operating on vserver "
	colorize bold colorize emph echo "$i"
	xtermTitle "vrpm: operating on vserver '$i'  [$cnt/${#vservers[@]}]"
    }

    if pkgmgmt.isInternal "$i"; then
	$_VSERVER "$i" exec rpm "$@"
    else
	callInNamespace "$i" \
	    "$_VNAMESPACE" --new -- "$_VRPM_WORKER" "$i" "$@"
    fi
    res=$?

    test $res -eq 0 -o "$is_quiet" || {
	colorize error echo -n $"vrpm failed on vserver '$i' with errorcode $res"
	echo
    }

    test -n "$is_quiet" || echo
done

test -z "$do_unify" || echo "unify currently unsupported" >&2
test "$cnt" -ge 0   || echo "No vservers specified" >&2
exit $res
