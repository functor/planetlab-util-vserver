dnl $Id: configure.ac,v 1.1.2.1.2.31 2004/02/11 21:06:17 ensc Exp $

dnl Copyright (C) 2003 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
dnl  
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2, or (at your option)
dnl any later version.
dnl  
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl  
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl  
dnl  
dnl As a special exception to the GNU General Public License, if you
dnl distribute this file as part of a program that contains a configuration
dnl script generated by Autoconf, you may include it under the same
dnl distribution terms that you use for the rest of that program.
dnl  

AC_PREREQ(2.57)

AC_INIT(util-vserver, 0.29, enrico.scholz@informatik.tu-chemnitz.de)
AC_CONFIG_SRCDIR([src/capchroot.c])
AC_CONFIG_HEADER([config.h])

AM_INIT_AUTOMAKE([gnu dist-bzip2 subdir-objects])
AM_MAINTAINER_MODE


# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AM_PROG_CC_C_O

ENSC_CHECK_CC_FLAG([-std=c99 -Wall -pedantic -W -Wno-unused-parameter])
ENSC_CHECK_CXX_FLAG([-ansi   -Wall -pedantic -W -fmessage-length=0])

AC_ARG_VAR(CC, [The C compiler])
ENSC_KERNEL_HEADERS(kernelincludedir)
ENSC_UV_VROOTDIR(vserverdir)
ENSC_CHANGELOG([SYSCALL_SWITCH])

dnl Check whether to enable linuxconf
AC_MSG_CHECKING([whether to enable linuxconf modules])
AC_ARG_ENABLE([linuxconf],
              [AC_HELP_STRING([--enable-linuxconf],
                              [enable 'newvserver' linuxconf module (default: no)])],
              [case "$enableval" in
	          yes|no) ;;
	          *)      AC_MSG_ERROR(['$i' is not a supported value for '--enable-linuxconf']);;
	       esac],
              [enable_linuxconf=no])

AM_CONDITIONAL(ENSC_ENABLE_LINUXCONF, [test x"$enable_linuxconf" = xyes])
AC_MSG_RESULT($enable_linuxconf)


dnl Check whether to use external kernel headers
AC_MSG_CHECKING([whether to use internal kernel headers])
AC_ARG_ENABLE([internal-headers],
              [AC_HELP_STRING([--disable-internal-headers],
                              [use vserver specific headers from the kernel instead of the shipped versions (default: no)])],
              [case "$enableval" in
	          yes|no) ;;
	          *)      AC_MSG_ERROR(['$i' is not a supported value for '--disable-internal-headers']);;
	       esac],
              [enable_internal_headers=yes])

AM_CONDITIONAL(ENSC_ENABLE_INTERNAL_HEADERS, [test x"$enable_internal_headers" = xyes])
AC_MSG_RESULT([$enable_internal_headers])


dnl Check for the APIs to be used
AC_MSG_CHECKING([for supported APIs])
AC_ARG_ENABLE([apis],
	      [AC_HELP_STRING([--enable-apis=APIS],
			      [enable support for the given apis; possible values are: legacy,compat,v11,ALL (default: ALL)])],
              [],
	      [enable_apis=ALL])

test x"$enable_apis" != xALL || enable_apis='legacy,compat,v11'
old_IFS=$IFS
IFS=,;
for i in $enable_apis; do
	case "$i" in
		compat)	AC_DEFINE(VC_ENABLE_API_COMPAT, 1, [Enable support for compatibily syscall API]);;
		legacy) AC_DEFINE(VC_ENABLE_API_LEGACY, 1, [Enable support for old, /proc parsing API]);;
		v11)    AC_DEFINE(VC_ENABLE_API_V11,    1, [Enable support for API of vserver 1.1.x]);;
		*)	AC_MSG_ERROR(['$i' is not a supported API]);;
	esac
done
IFS=$old_IFS
AC_MSG_RESULT([$enable_apis])

ENSC_SYSCALL
ENSC_CHECK_EXT2FS_HEADER
AC_CHECK_FUNCS([vserver])
AC_CHECK_DECLS(MS_MOVE,,,[#include <linux/fs.h>])
AC_CHECK_TYPES(xid_t,,,[#include <sys/types.h>])

AC_CONFIG_FILES([util-vserver.spec Makefile])
AC_OUTPUT
